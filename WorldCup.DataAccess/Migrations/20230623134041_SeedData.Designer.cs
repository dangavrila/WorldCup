// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorldCup.DataAccess;

#nullable disable

namespace WorldCup.DataAccess.Migrations
{
    [DbContext(typeof(WorldCupDbContext))]
    [Migration("20230623134041_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorldCup.DataAccess.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = 3,
                            Name = "France"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Belgium"
                        });
                });

            modelBuilder.Entity("WorldCup.DataAccess.Entities.Draw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("WorldCup.DataAccess.Entities.DrawDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DrawId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DrawId");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeamId");

                    b.ToTable("DrawDetails");
                });

            modelBuilder.Entity("WorldCup.DataAccess.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "C"
                        },
                        new
                        {
                            Id = 4,
                            Name = "D"
                        },
                        new
                        {
                            Id = 5,
                            Name = "E"
                        },
                        new
                        {
                            Id = 6,
                            Name = "F"
                        },
                        new
                        {
                            Id = 7,
                            Name = "G"
                        },
                        new
                        {
                            Id = 8,
                            Name = "H"
                        });
                });

            modelBuilder.Entity("WorldCup.DataAccess.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Adesso Berlin"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Adesso Frankfurt"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Adesso Munich"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Name = "Adesso Dormund"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            Name = "Adesso Istanbul"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 2,
                            Name = "Adesso Ankara"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 2,
                            Name = "Adesso Izmir"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 2,
                            Name = "Adesso Antalya"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 3,
                            Name = "Adesso Paris"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 3,
                            Name = "Adesso Marsilya"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 3,
                            Name = "Adesso Nice"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 3,
                            Name = "Adesso Lyon"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 4,
                            Name = "Adesso Amsterdam"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 4,
                            Name = "Adesso Rotterdam"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 4,
                            Name = "Adesso Lahey"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 4,
                            Name = "Adesso Eindhoven"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 5,
                            Name = "Adesso Lisbon"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 5,
                            Name = "Adesso Porto"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 5,
                            Name = "Adesso Braga"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 5,
                            Name = "Adesso Coimbra"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 6,
                            Name = "Adesso Roma"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 6,
                            Name = "Adesso Milano"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 6,
                            Name = "Adesso Venedik"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 6,
                            Name = "Adesso Napoli"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 7,
                            Name = "Adesso Sevilla"
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 7,
                            Name = "Adesso Madrid"
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 7,
                            Name = "Adesso Barcelona"
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 7,
                            Name = "Adesso Granada"
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 8,
                            Name = "Adesso Brussel"
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 8,
                            Name = "Adesso Bruges"
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 8,
                            Name = "Adesso Gent"
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 8,
                            Name = "Adesso Antwerp"
                        });
                });

            modelBuilder.Entity("WorldCup.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WorldCup.DataAccess.Entities.Draw", b =>
                {
                    b.HasOne("WorldCup.DataAccess.Entities.User", "User")
                        .WithMany("Draws")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorldCup.DataAccess.Entities.DrawDetail", b =>
                {
                    b.HasOne("WorldCup.DataAccess.Entities.Draw", "Draw")
                        .WithMany()
                        .HasForeignKey("DrawId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorldCup.DataAccess.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorldCup.DataAccess.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Draw");

                    b.Navigation("Group");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WorldCup.DataAccess.Entities.Team", b =>
                {
                    b.HasOne("WorldCup.DataAccess.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WorldCup.DataAccess.Entities.User", b =>
                {
                    b.Navigation("Draws");
                });
#pragma warning restore 612, 618
        }
    }
}
